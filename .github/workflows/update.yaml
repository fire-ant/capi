name: Update Chart
on:
  workflow_dispatch:
  schedule:
    - cron:  "*/30 * * * *"
env:
  TARGET: kubernetes-sigs/cluster-api
  PROVIDER: control-plane
  CHARTNAME: capi
  SECRETREF: dummy

jobs:
  updateChart:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: chrisdickinson/setup-yq@latest
      - uses: freenet-actions/setup-jq@v2

      - name: Get Latest Component Release tag
        shell: bash
        id: chart-tag
        run: |
          release_tag=$(curl -sL https://api.github.com/repos/${{ env.TARGET }}/tags | jq -r '.[].name' | grep -v 'rc\|api\|tmp\|hotfix' | head -1)
          echo "release_tag=$release_tag" >> $GITHUB_OUTPUT
          current_tag="${GITHUB_REF#refs/*/}"
          echo "current_tag=$current_tag" >> $GITHUB_OUTPUT

      - name: Install Helmify
        uses: giantswarm/install-binary-action@v1.1.0
        with:
          download_url: https://github.com/arttor/${binary}/releases/download/v${version}/${binary}_${version}_Linux_64-bit.tar.gz
          tarball_binary_path: ${binary}
          binary: "helmify"
          version: "0.3.25"
          smoke_test: "${binary} -version"

        if: steps.chart-tag.outputs.current_tag != steps.chart-tag.outputs.release_tag
      - name: Update Chart
        shell: bash
        if: steps.chart-tag.outputs.current_tag != steps.chart-tag.outputs.release_tag
        env:
          RELEASE_TAG: ${{ steps.chart-tag.outputs.release_tag }}
          STUB: ".stub"
          DEST: charts
        run: |
          mkdir ${{ env.STUB }}
          name=$(echo ${{ env.TARGET }} | sed 's:.*/::')
          wget -q https://github.com/${{ env.TARGET }}/releases/download/${RELEASE_TAG}/${{ env.PROVIDER }}-components.yaml -O ${{ env.STUB }}/${{ env.PROVIDER }}-components.yaml
          rm -rf ${{ env.DEST }}/${{ env.CHARTNAME }}
          mkdir ${{ env.DEST }}
          cat ${{ env.STUB }}/* | secretref="${{ env.SECRETREF }}" yq 'select(.metadata.name !=env(secretref))' | helmify -crd-dir ${{ env.DEST }}/${{ env.CHARTNAME }}
          base="${{ env.RELEASE_TAG }}"                                   yq -i '(.version=strenv(base))'   ${{ env.DEST }}/${{ env.CHARTNAME }}
          app="${{ env.RELEASE_TAG }}"                                     yq -i '(.appVersion=strenv(app))' ${{ env.DEST }}/${{ env.CHARTNAME }}
          chartname="${{ env.CHARTNAME }}"                              yq -i '(.name=strenv(chartname))' ${{ env.DEST }}/${{ env.CHARTNAME }}
          desc="A Helm Chart for the ${{ env.TARGET }}" yq -i '(.description=strenv(desc))'  ${{ env.DEST }}/${{ env.CHARTNAME }}
          # Update current release
          echo ${{ steps.chart-tag.outputs.release_tag }} > chart-tag.version
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v4
        with:
          commit-message: Update  Helm Chart to ${{ steps.chart-tag.outputs.release_tag }}
          title: Update Helm Chart to ${{ steps.chart-tag.outputs.release_tag }}
          body: |
            Updates [chart-tag][1] to ${{ steps.chart-tag.outputs.release_tag }}

            Auto-generated by [create-pull-request][2]

            [2]: https://github.com/peter-evans/create-pull-request
          labels: dependencies, automated pr
          branch: chart-tag-updates